name: Deploy Docs to Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: '.docs/package-lock.json'

      - name: Cache Node Modules
        id: node-cache
        uses: actions/cache@v3
        with:
          path: .docs/node_modules
          key: node-modules-${{ hashFiles('.docs/package-lock.json') }}

      - name: Install dependencies
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: cd .docs && npm ci

  build-docs:
    name: Build Docs
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: '.docs/package-lock.json'

      - name: Cache Node Modules
        id: node-cache
        uses: actions/cache@v3
        with:
          path: .docs/node_modules
          key: node-modules-${{ hashFiles('.docs/package-lock.json') }}

      - name: Use NODE_ENV=production
        run: echo "NODE_ENV=production" >> $GITHUB_ENV

      - name: Static HTML export with Nuxt
        run: cd .docs && npm run generate

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: .docs/.output/public

  deploy:
    needs: [setup, build-docs]
    name: Deploy to GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
