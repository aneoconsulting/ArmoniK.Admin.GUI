name: cd docker

on:
  push:
    branches:
      - "main"
    tags:
      - "v*.*.*"

jobs:
  docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dockerfile:
          - name: armonik_admin_app
            file: app.Dockerfile
          - name: armonik_admin_api
            file: api.Dockerfile
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true

      # - name: Update version
      #   # Only for a tag
      #   if: startsWith(github.ref, 'refs/tags/v')
      #   run: bash ${GITHUB_WORKSPACE}/scripts/github/update-version.sh

      # - name: Commit and Push
      #   # Only for a tag
      #   if: startsWith(github.ref, 'refs/tags/v')
      #   uses: EndBug/add-and-commit@v9
      #   with:
      #     new_branch: main
      #     message: 'Update version to ${{ github.ref_name }}'
      #     push: true

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            dockerhubaneo/${{ matrix.dockerfile.name }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v1
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: ${{ matrix.dockerfile.file }}
