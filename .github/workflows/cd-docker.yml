name: CD Docker

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*.*.*'

jobs:
  docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dockerfile:
          - name: armonik_admin_app
            file: app.Dockerfile
          - name: armonik_admin_api
            file: api.Dockerfile
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true

      - name: Restore Node Modules
        id: node-cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install Dependencies
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Restore Protos
        id: proto-cache
        uses: actions/cache@v3
        with:
          path: libs/shared/data-access/src/lib/proto/generated
          key: protobuf-${{ hashFiles('apps/app/src/assets/ArmoniK.Api/Protos/V1/*.proto') }}

      - name: Install Protoc
        if: steps.proto-cache.outputs.cache-hit != 'true'
        uses: arduino/setup-protoc@v1

      - name: Build proto
        if: steps.proto-cache.outputs.cache-hit != 'true'
        run: npm run proto:generate

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            dockerhubaneo/${{ matrix.dockerfile.name }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: ${{ matrix.dockerfile.file }}
